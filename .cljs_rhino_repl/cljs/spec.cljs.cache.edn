{:use-macros nil, :excludes #{cat * or keys + and def}, :name cljs.spec, :imports nil, :requires {cljs.core cljs.core, gobj goog.object, goog.object goog.object, walk clojure.walk, gen cljs.spec.impl.gen, cljs.spec.impl.gen cljs.spec.impl.gen, c cljs.core, str clojure.string, clojure.string clojure.string, clojure.walk clojure.walk}, :uses nil, :defs {form {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 132, :column 7, :end-line 132, :end-column 11, :arglists (quote ([spec])), :doc "returns the spec as data"}, :name cljs.spec/form, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 11, :method-params ([spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 1, :fn-var true, :arglists (quote ([spec])), :doc "returns the spec as data"}, t_cljs$spec45004 {:num-fields 10, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta cljs.core/ILookup}, :name cljs.spec/t_cljs$spec45004, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :type true, :anonymous true, :column 5, :line 1130, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta cljs.core/ILookup}}, t_cljs$spec44773 {:num-fields 15, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec44773, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :type true, :anonymous true, :column 6, :line 687, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, *recursion-limit* {:name cljs.spec/*recursion-limit*, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 21, :column 1, :end-line 21, :end-column 33, :dynamic true, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 21, :column 16, :end-line 21, :end-column 33, :dynamic true}, :doc "A soft limit on how many times a branching spec (or/alt/*/opt-keys/multi-spec)\n  can be recursed through during generation. After this a\n  non-recursive branch will be chosen."}, *coll-error-limit* {:name cljs.spec/*coll-error-limit*, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 35, :column 1, :end-line 35, :end-column 34, :dynamic true, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 35, :column 16, :end-line 35, :end-column 34, :dynamic true}, :doc "The number of errors reported by explain in a collection spec'ed with 'every'"}, op-explain {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 955, :column 8, :end-line 955, :end-column 18, :private true, :arglists (quote ([form p path via in input]))}, :private true, :name cljs.spec/op-explain, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 18, :method-params ([form p path via in input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 955, :end-line 955, :max-fixed-arity 6, :fn-var true, :arglists (quote ([form p path via in input]))}, t_cljs$spec44670 {:num-fields 9, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec44670, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :type true, :anonymous true, :column 5, :line 618, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cljs$spec44991 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([regex-spec-impl re gfn meta44992])), :file nil}, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec44991, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :method-params ([regex-spec-impl re gfn meta44992]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 1085, :max-fixed-arity 4, :fn-var true, :arglists (quote ([regex-spec-impl re gfn meta44992])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, alt-impl {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 839, :column 19, :end-line 839, :end-column 27, :skip-wiki true, :arglists (quote ([ks ps forms])), :doc "Do not call this directly, use 'alt'"}, :name cljs.spec/alt-impl, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 27, :method-params ([ks ps forms]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 839, :end-line 839, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ks ps forms])), :doc "Do not call this directly, use 'alt'"}, tagged-ret {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 598, :column 8, :end-line 598, :end-column 18, :private true, :arglists (quote ([v]))}, :private true, :name cljs.spec/tagged-ret, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 18, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 598, :end-line 598, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, def-impl {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 246, :column 19, :end-line 246, :end-column 27, :skip-wiki true, :arglists (quote ([k form spec])), :doc "Do not call this directly, use 'def'"}, :name cljs.spec/def-impl, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 27, :method-params ([k form spec]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 246, :end-line 246, :max-fixed-arity 3, :fn-var true, :arglists (quote ([k form spec])), :doc "Do not call this directly, use 'def'"}, unstrument* {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 345, :column 7, :end-line 345, :end-column 18, :arglists (quote ([v]))}, :name cljs.spec/unstrument*, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 18, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 345, :end-line 345, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, regex-spec-impl {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 1082, :column 19, :end-line 1082, :end-column 34, :skip-wiki true, :arglists (quote ([re gfn])), :doc "Do not call this directly, use 'spec' with a regex op argument"}, :name cljs.spec/regex-spec-impl, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 34, :method-params ([re gfn]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 1082, :end-line 1082, :max-fixed-arity 2, :fn-var true, :arglists (quote ([re gfn])), :doc "Do not call this directly, use 'spec' with a regex op argument"}, explain-data* {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 167, :column 7, :end-line 167, :end-column 20, :arglists (quote ([spec path via in x]))}, :name cljs.spec/explain-data*, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 20, :method-params ([spec path via in x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 167, :end-line 167, :max-fixed-arity 5, :fn-var true, :arglists (quote ([spec path via in x]))}, add-ret {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 906, :column 8, :end-line 906, :end-column 15, :private true, :arglists (quote ([p r k]))}, :private true, :name cljs.spec/add-ret, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 15, :method-params ([p r k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 906, :end-line 906, :max-fixed-arity 3, :fn-var true, :arglists (quote ([p r k]))}, explain-pred-list {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 655, :column 8, :end-line 655, :end-column 25, :private true, :arglists (quote ([forms preds path via in x]))}, :private true, :name cljs.spec/explain-pred-list, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 25, :method-params ([forms preds path via in x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 655, :end-line 655, :max-fixed-arity 6, :fn-var true, :arglists (quote ([forms preds path via in x]))}, MAX_INT {:name cljs.spec/MAX_INT, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 19, :column 1, :end-line 19, :end-column 21, :const true, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 19, :column 14, :end-line 19, :end-column 21, :const true}}, alt2 {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 837, :column 8, :end-line 837, :end-column 12, :private true, :arglists (quote ([p1 p2]))}, :private true, :name cljs.spec/alt2, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 12, :method-params ([p1 p2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 837, :end-line 837, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p1 p2]))}, inst-in-range? {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 1199, :column 7, :end-line 1199, :end-column 21, :arglists (quote ([start end inst])), :doc "Return true if inst at or after start and before end"}, :name cljs.spec/inst-in-range?, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 21, :method-params ([start end inst]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1199, :end-line 1199, :max-fixed-arity 3, :fn-var true, :arglists (quote ([start end inst])), :doc "Return true if inst at or after start and before end"}, registry-ref {:name cljs.spec/registry-ref, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 51, :column 1, :end-line 51, :end-column 32, :private true, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 51, :column 20, :end-line 51, :end-column 32, :private true}}, accept? {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 774, :column 8, :end-line 774, :end-column 15, :private true, :arglists (quote ([{:keys [:cljs.spec/op]}]))}, :private true, :name cljs.spec/accept?, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 15, :method-params ([p__44776]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 774, :end-line 774, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [:cljs.spec/op]}]))}, and-spec-impl {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 666, :column 19, :end-line 666, :end-column 32, :skip-wiki true, :arglists (quote ([forms preds gfn])), :doc "Do not call this directly, use 'and'"}, :name cljs.spec/and-spec-impl, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 32, :method-params ([forms preds gfn]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 666, :end-line 666, :max-fixed-arity 3, :fn-var true, :arglists (quote ([forms preds gfn])), :doc "Do not call this directly, use 'and'"}, accept {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 772, :column 8, :end-line 772, :end-column 14, :private true, :arglists (quote ([x]))}, :private true, :name cljs.spec/accept, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 772, :end-line 772, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, recur-limit? {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 355, :column 8, :end-line 355, :end-column 20, :private true, :arglists (quote ([rmap id path k]))}, :private true, :name cljs.spec/recur-limit?, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 20, :method-params ([rmap id path k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 355, :end-line 355, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rmap id path k]))}, ->t_cljs$spec44600 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([map__44598 opt map-spec-impl req-un opt-un p__44567 gfn pred-exprs keys-pred argm opt-keys req-specs keys->specs req id req-keys opt-specs k->s pred-forms meta44601])), :file nil}, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec44600, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :method-params ([map__44598 opt map-spec-impl req-un opt-un p__44567 gfn pred-exprs keys-pred argm opt-keys req-specs keys->specs req id req-keys opt-specs k->s pred-forms meta44601]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 397, :max-fixed-arity 20, :fn-var true, :arglists (quote ([map__44598 opt map-spec-impl req-un opt-un p__44567 gfn pred-exprs keys-pred argm opt-keys req-specs keys->specs req id req-keys opt-specs k->s pred-forms meta44601])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, describe* {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 49, :column 4, :end-line 49, :end-column 13, :protocol cljs.spec/Spec, :doc nil, :arglists (quote ([spec]))}, :protocol cljs.spec/Spec, :name cljs.spec/describe*, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 13, :method-params ([spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([spec])), :doc nil}, map-spec-impl {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 389, :column 19, :end-line 389, :end-column 32, :skip-wiki true, :arglists (quote ([{:keys [req-un opt-un pred-exprs opt-keys req-specs req req-keys opt-specs pred-forms opt gfn], :as argm}])), :doc "Do not call this directly, use 'spec' with a map argument"}, :name cljs.spec/map-spec-impl, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 32, :method-params ([p__44567]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 389, :end-line 389, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [req-un opt-un pred-exprs opt-keys req-specs req req-keys opt-specs pred-forms opt gfn], :as argm}])), :doc "Do not call this directly, use 'spec' with a map argument"}, *instrument-enabled* {:meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 39, :column 26, :end-line 39, :end-column 46, :dynamic true, :private true}, :private true, :name cljs.spec/*instrument-enabled*, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 46, :column 1, :dynamic true, :line 39, :end-line 39, :doc "if false, instrumented fns call straight through"}, t_cljs$spec44994 {:num-fields 4, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec44994, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :type true, :anonymous true, :column 3, :line 1085, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cljs$spec44762 {:num-fields 5, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec44762, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :type true, :anonymous true, :column 3, :line 669, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, reg-resolve! {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 77, :column 8, :end-line 77, :end-column 20, :private true, :arglists (quote ([k])), :doc "returns the spec/regex at end of alias chain starting with k, throws if not found, k if k not ident"}, :private true, :name cljs.spec/reg-resolve!, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 20, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k])), :doc "returns the spec/regex at end of alias chain starting with k, throws if not found, k if k not ident"}, instrumented-vars {:name cljs.spec/instrumented-vars, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 328, :column 1, :end-line 328, :end-column 33, :private true, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 328, :column 16, :end-line 328, :end-column 33, :private true}, :doc "Map for instrumented vars to :raw/:wrapped fns"}, re-explain {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 1058, :column 8, :end-line 1058, :end-column 18, :private true, :arglists (quote ([path via in re input]))}, :private true, :name cljs.spec/re-explain, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 18, :method-params ([path via in re input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1058, :end-line 1058, :max-fixed-arity 5, :fn-var true, :arglists (quote ([path via in re input]))}, alts {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 836, :column 8, :end-line 836, :end-column 12, :private true, :arglists (quote ([& ps])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(ps)], :arglists ([& ps]), :arglists-meta (nil)}}, :private true, :name cljs.spec/alts, :variadic true, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(ps)], :arglists ([& ps]), :arglists-meta (nil)}, :method-params [(ps)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 836, :end-line 836, :max-fixed-arity 0, :fn-var true, :arglists ([& ps])}, t_cljs$spec44991 {:num-fields 4, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec44991, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :type true, :anonymous true, :column 3, :line 1085, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, with-name {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 55, :column 8, :end-line 55, :end-column 17, :private true, :arglists (quote ([spec name]))}, :private true, :name cljs.spec/with-name, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 17, :method-params ([spec name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec name]))}, explain {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 212, :column 7, :end-line 212, :end-column 14, :arglists (quote ([spec x])), :doc "Given a spec and a value that fails to conform, prints an explanation to *out*."}, :name cljs.spec/explain, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 14, :method-params ([spec x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 212, :end-line 212, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec x])), :doc "Given a spec and a value that fails to conform, prints an explanation to *out*."}, spec-name {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 58, :column 8, :end-line 58, :end-column 17, :private true, :arglists (quote ([spec]))}, :private true, :name cljs.spec/spec-name, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 17, :method-params ([spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([spec]))}, map-spec {:name cljs.spec/map-spec, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 273, :column 1, :end-line 273, :end-column 18, :declared true, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 273, :column 10, :end-line 273, :end-column 18, :declared true}}, ->t_cljs$spec44994 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([regex-spec-impl re gfn meta44995])), :file nil}, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec44994, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :method-params ([regex-spec-impl re gfn meta44995]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 1085, :max-fixed-arity 4, :fn-var true, :arglists (quote ([regex-spec-impl re gfn meta44995])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cljs$spec44633 {:num-fields 6, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec44633, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :type true, :anonymous true, :column 6, :line 479, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, with-gen* {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 48, :column 4, :end-line 48, :end-column 13, :protocol cljs.spec/Spec, :doc nil, :arglists (quote ([spec gfn]))}, :protocol cljs.spec/Spec, :name cljs.spec/with-gen*, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 13, :method-params ([spec gfn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 48, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec gfn])), :doc nil}, ->t_cljs$spec44644 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([form mmvar retag gfn id predx dval tag meta44645])), :file nil}, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec44644, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :method-params ([form mmvar retag gfn id predx dval tag meta44645]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 6, :factory :positional, :line 509, :max-fixed-arity 9, :fn-var true, :arglists (quote ([form mmvar retag gfn id predx dval tag meta44645])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, spec-checking-fn {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 287, :column 8, :end-line 287, :end-column 24, :private true, :arglists (quote ([v f]))}, :private true, :name cljs.spec/spec-checking-fn, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 24, :method-params ([v f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 287, :end-line 287, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v f]))}, or-spec-impl {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 604, :column 19, :end-line 604, :end-column 31, :skip-wiki true, :arglists (quote ([keys forms preds gfn])), :doc "Do not call this directly, use 'or'"}, :name cljs.spec/or-spec-impl, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 31, :method-params ([keys forms preds gfn]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 604, :end-line 604, :max-fixed-arity 4, :fn-var true, :arglists (quote ([keys forms preds gfn])), :doc "Do not call this directly, use 'or'"}, specize {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 116, :column 8, :end-line 116, :end-column 15, :private true, :arglists (quote ([s]))}, :private true, :name cljs.spec/specize, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 15, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, *fspec-iterations* {:name cljs.spec/*fspec-iterations*, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 27, :column 1, :end-line 27, :end-column 34, :dynamic true, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 27, :column 16, :end-line 27, :end-column 34, :dynamic true}, :doc "The number of times an anonymous fn specified by fspec will be (generatively) tested during conform"}, Spec {:meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 43, :column 14, :end-line 43, :end-column 18, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {conform* [[spec x]], unform* [[spec y]], explain* [[spec path via in x]], gen* [[spec overrides path rmap]], with-gen* [[spec gfn]], describe* [[spec]]}}}, :protocol-symbol true, :name cljs.spec/Spec, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 18, :column 1, :line 43, :protocol-info {:methods {conform* [[spec x]], unform* [[spec y]], explain* [[spec path via in x]], gen* [[spec overrides path rmap]], with-gen* [[spec gfn]], describe* [[spec]]}}, :info nil, :end-line 43, :impls #{cljs.spec/t_cljs$spec44991 cljs.spec/t_cljs$spec44759 cljs.spec/t_cljs$spec44633 cljs.spec/t_cljs$spec44570 cljs.spec/t_cljs$spec44658 cljs.spec/t_cljs$spec44663 cljs.spec/t_cljs$spec44773 cljs.spec/t_cljs$spec44762 cljs.spec/t_cljs$spec44994 cljs.spec/t_cljs$spec45004 cljs.spec/t_cljs$spec44644 cljs.spec/t_cljs$spec44600 cljs.spec/t_cljs$spec45010 cljs.spec/t_cljs$spec44670}, :doc nil, :jsdoc ("@interface")}, unform {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 125, :column 7, :end-line 125, :end-column 13, :arglists (quote ([spec x])), :doc "Given a spec and a value created by or compliant with a call to\n  'conform' with the same spec, returns a value with all conform\n   destructuring undone."}, :name cljs.spec/unform, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 13, :method-params ([spec x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec x])), :doc "Given a spec and a value created by or compliant with a call to\n  'conform' with the same spec, returns a value with all conform\n   destructuring undone."}, valid? {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 375, :column 7, :end-line 375, :end-column 13, :arglists (quote ([spec x] [spec x form])), :doc "Helper function that returns true when x is valid for spec.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([spec x] [spec x form]), :arglists ([spec x] [spec x form]), :arglists-meta (nil nil)}}, :name cljs.spec/valid?, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([spec x] [spec x form]), :arglists ([spec x] [spec x form]), :arglists-meta (nil nil)}, :method-params ([spec x] [spec x form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 375, :end-line 375, :max-fixed-arity 3, :fn-var true, :arglists ([spec x] [spec x form]), :doc "Helper function that returns true when x is valid for spec."}, coll-checker {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 1178, :column 7, :end-line 1178, :end-column 19, :arglists (quote ([pred])), :doc "returns a predicate function that checks *coll-check-limit* items in a collection with pred"}, :name cljs.spec/coll-checker, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 19, :method-params ([pred]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1178, :end-line 1178, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pred])), :doc "returns a predicate function that checks *coll-check-limit* items in a collection with pred"}, gen {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 233, :column 7, :end-line 233, :end-column 10, :arglists (quote ([spec] [spec overrides])), :doc "Given a spec, returns the generator for it, or throws if none can\n  be constructed. Optionally an overrides map can be provided which\n  should map spec names or paths (vectors of keywords) to\n  generators. These will be used instead of the generators at those\n  names/paths. Note that parent generator (in the spec or overrides\n  map) will supersede those of any subtrees. A generator for a regex\n  op must always return a sequential collection (i.e. a generator for\n  s/? should return either an empty sequence/vector or a\n  sequence/vector with one item in it)", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([spec] [spec overrides]), :arglists ([spec] [spec overrides]), :arglists-meta (nil nil)}}, :name cljs.spec/gen, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([spec] [spec overrides]), :arglists ([spec] [spec overrides]), :arglists-meta (nil nil)}, :method-params ([spec] [spec overrides]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 233, :end-line 233, :max-fixed-arity 2, :fn-var true, :arglists ([spec] [spec overrides]), :doc "Given a spec, returns the generator for it, or throws if none can\n  be constructed. Optionally an overrides map can be provided which\n  should map spec names or paths (vectors of keywords) to\n  generators. These will be used instead of the generators at those\n  names/paths. Note that parent generator (in the spec or overrides\n  map) will supersede those of any subtrees. A generator for a regex\n  op must always return a sequential collection (i.e. a generator for\n  s/? should return either an empty sequence/vector or a\n  sequence/vector with one item in it)"}, t_cljs$spec44658 {:num-fields 4, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec44658, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :type true, :anonymous true, :column 4, :line 547, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, unform* {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 45, :column 4, :end-line 45, :end-column 11, :protocol cljs.spec/Spec, :doc nil, :arglists (quote ([spec y]))}, :protocol cljs.spec/Spec, :name cljs.spec/unform*, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 11, :method-params ([spec y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 45, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec y])), :doc nil}, ->sym {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 261, :column 8, :end-line 261, :end-column 13, :private true, :arglists (quote ([x])), :doc "Returns a symbol from a symbol or var"}, :private true, :name cljs.spec/->sym, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 261, :end-line 261, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns a symbol from a symbol or var"}, abbrev {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 138, :column 7, :end-line 138, :end-column 13, :arglists (quote ([form]))}, :name cljs.spec/abbrev, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 13, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, t_cljs$spec44570 {:num-fields 20, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec44570, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :type true, :anonymous true, :column 5, :line 397, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, regex? {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 90, :column 7, :end-line 90, :end-column 13, :arglists (quote ([x])), :doc "returns x if x is a (clojure.spec) regex op, else logical false"}, :name cljs.spec/regex?, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "returns x if x is a (clojure.spec) regex op, else logical false"}, ->t_cljs$spec44663 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([or-spec-impl keys forms preds gfn id kps cform meta44664])), :file nil}, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec44663, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :method-params ([or-spec-impl keys forms preds gfn id kps cform meta44664]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 618, :max-fixed-arity 9, :fn-var true, :arglists (quote ([or-spec-impl keys forms preds gfn id kps cform meta44664])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, no-fn-spec {:protocol-inline nil, :meta {:file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :line 323, :column 8, :end-line 323, :end-column 18, :private true, :arglists (quote ([v specs]))}, :private true, :name cljs.spec/no-fn-spec, :variadic false, :file "file:/home/alyssavance/.m2/repository/org/clojure/clojurescript/1.9.93/clojurescript-1.9.93.jar!/cljs/spec.cljs", :end-column 18, :method-params ([v specs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 323, :end-line 323, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v specs]))}, ...}, :require-macros {c cljs.core, cljs.core cljs.core, s cljs.spec, cljs.spec cljs.spec}, :cljs.analyzer/constants {:seen #{form map__44598 tag max-count :args meta45005 :max-tries :req-un :opt-un cljs.spec/keys p__44770 unc :cljs.spec/invalid p1__45016# cljs.spec/spec :p2 :ret :gfn :pred-exprs vector? :gen-max map :shrunk :fn regex-spec-impl predx :rep+ :cljs.spec/amp cljs.core/= :opt-keys aform :pred dval :splice and-spec-impl check? forms opt argspec :else meta44671 :gen :cljs.spec/k map-spec-impl :ks cljs.core/count req-un opt-un :cljs.spec/args :_ meta44995 :maybe :raw :via :cljs.spec/kfn meta44645 meta44659 :as zipmap meta44571 ...}, :order [:cljs.spec/name :cljs.spec/op :cljs.spec/unknown fn % :else :cljs.spec/problems :pred :val :reason :via :in :cljs.spec/recursion-limit :args :ret :cljs.spec/invalid :cljs.spec/args :var :specs :raw :wrapped :opt :req-un :opt-un :gfn :pred-exprs :opt-keys :req-specs :req :req-keys :opt-specs :pred-forms map? cljs.spec/keys opt map-spec-impl :skip-wiki :arglists :doc quote :keys :as req-un opt-un pred-exprs opt-keys req-specs req req-keys opt-specs pred-forms gfn argm p__44567 keys-pred map__44568 keys->specs id k->s meta44571 ...]}, :doc nil}