{:use-macros {warnf taoensso.timbre, go cljs.core.async.macros, have taoensso.encore, go-loop cljs.core.async.macros, have! taoensso.encore, have? taoensso.encore, debugf taoensso.timbre, tracef taoensso.timbre, infof taoensso.timbre, errorf taoensso.timbre}, :excludes #{}, :name taoensso.sente, :imports nil, :requires {timbre taoensso.timbre, interfaces taoensso.sente.interfaces, async cljs.core.async, taoensso.sente.interfaces taoensso.sente.interfaces, cljs.core.async cljs.core.async, enc taoensso.encore, taoensso.timbre taoensso.timbre, str clojure.string, clojure.string clojure.string, taoensso.encore taoensso.encore}, :uses {<! cljs.core.async, swap-in! taoensso.encore, chan cljs.core.async, format taoensso.encore, swapped taoensso.encore, reset-in! taoensso.encore, >! cljs.core.async, put! cljs.core.async}, :defs {assert-send-args {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 765, :column 8, :end-line 765, :end-column 24, :private true, :arglists (quote ([x ?timeout-ms ?cb]))}, :private true, :name taoensso.sente/assert-send-args, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 24, :method-params ([x ?timeout-ms ?cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 765, :end-line 765, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x ?timeout-ms ?cb]))}, map->ChAjaxSocket {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1056, :column 12, :end-line 1056, :end-column 24, :internal-ctor true, :factory :map, :arglists (quote ([G__22886]))}, :name taoensso.sente/map->ChAjaxSocket, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 24, :method-params ([G__22886]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 1056, :end-line 1056, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__22886]))}, ->EdnPacker {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 210, :column 10, :end-line 210, :end-column 19, :protocols #{taoensso.sente.interfaces/IPacker}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([]))}, :protocols #{taoensso.sente.interfaces/IPacker}, :name taoensso.sente/->EdnPacker, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 210, :end-line 210, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :skip-protocol-flag nil}, as-event {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 107, :column 7, :end-line 107, :end-column 15, :arglists (quote ([x]))}, :name taoensso.sente/as-event, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, server-event-msg? {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 133, :column 7, :end-line 133, :end-column 24, :arglists (quote ([x]))}, :name taoensso.sente/server-event-msg?, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 24, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, send-buffered-server-evs>ws-clients! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 663, :column 8, :end-line 663, :end-column 44, :private true, :arglists (quote ([conns_ uid buffered-evs-pstr upd-conn!])), :doc "Actually pushes buffered events (as packed-str) to all uid's WebSocket conns."}, :private true, :name taoensso.sente/send-buffered-server-evs>ws-clients!, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 44, :method-params ([conns_ uid buffered-evs-pstr upd-conn!]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 663, :end-line 663, :max-fixed-arity 4, :fn-var true, :arglists (quote ([conns_ uid buffered-evs-pstr upd-conn!])), :doc "Actually pushes buffered events (as packed-str) to all uid's WebSocket conns."}, pack {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 192, :column 8, :end-line 192, :end-column 12, :private true, :arglists (quote ([packer ?packer-meta clj] [packer ?packer-meta clj ?cb-uuid])), :doc "clj->prefixed-pstr", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([packer ?packer-meta clj] [packer ?packer-meta clj ?cb-uuid]), :arglists ([packer ?packer-meta clj] [packer ?packer-meta clj ?cb-uuid]), :arglists-meta (nil nil)}}, :private true, :name taoensso.sente/pack, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([packer ?packer-meta clj] [packer ?packer-meta clj ?cb-uuid]), :arglists ([packer ?packer-meta clj] [packer ?packer-meta clj ?cb-uuid]), :arglists-meta (nil nil)}, :method-params ([packer ?packer-meta clj] [packer ?packer-meta clj ?cb-uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 192, :end-line 192, :max-fixed-arity 4, :fn-var true, :arglists ([packer ?packer-meta clj] [packer ?packer-meta clj ?cb-uuid]), :doc "clj->prefixed-pstr"}, chsk-send! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 749, :column 7, :end-line 749, :end-column 17, :arglists (quote ([chsk ev] [chsk ev ?timeout-ms ?cb] [chsk ev opts])), :doc "Sends `[ev-id ev-?data :as event]`, returns true on apparent success.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([chsk ev] [chsk ev ?timeout-ms ?cb] [chsk ev opts]), :arglists ([chsk ev] [chsk ev ?timeout-ms ?cb] [chsk ev opts]), :arglists-meta (nil nil nil)}}, :name taoensso.sente/chsk-send!, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([chsk ev] [chsk ev ?timeout-ms ?cb] [chsk ev opts]), :arglists ([chsk ev] [chsk ev ?timeout-ms ?cb] [chsk ev opts]), :arglists-meta (nil nil nil)}, :method-params ([chsk ev] [chsk ev ?timeout-ms ?cb] [chsk ev opts]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 749, :end-line 749, :max-fixed-arity 4, :fn-var true, :arglists ([chsk ev] [chsk ev ?timeout-ms ?cb] [chsk ev opts]), :doc "Sends `[ev-id ev-?data :as event]`, returns true on apparent success."}, validate-event {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 96, :column 8, :end-line 96, :end-column 22, :private true, :arglists (quote ([x]))}, :private true, :name taoensso.sente/validate-event, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, event? {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 105, :column 7, :end-line 105, :end-column 13, :arglists (quote ([x])), :doc "Valid [ev-id ?ev-data] form?"}, :name taoensso.sente/event?, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Valid [ev-id ?ev-data] form?"}, event-msg? {:name taoensso.sente/event-msg?, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1471, :column 1, :end-line 1471, :end-column 16, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1471, :column 6, :end-line 1471, :end-column 16}}, make-channel-socket! {:name taoensso.sente/make-channel-socket!, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1473, :column 1, :end-line 1473, :end-column 26, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1473, :column 6, :end-line 1473, :end-column 26}}, make-channel-socket-server! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 242, :column 7, :end-line 242, :end-column 34, :arglists (quote ([web-server-ch-adapter & [{:keys [recv-buf-or-n ws-kalive-ms lp-timeout-ms send-buf-ms-ajax send-buf-ms-ws user-id-fn csrf-token-fn handshake-data-fn packer], :or {ws-kalive-ms (enc/ms :secs 25), send-buf-ms-ws 30, lp-timeout-ms (enc/ms :secs 20), csrf-token-fn (fn [ring-req] (or (get-in ring-req [:session :csrf-token]) (get-in ring-req [:session :ring.middleware.anti-forgery/anti-forgery-token]) (get-in ring-req [:session "__anti-forgery-token"]))), packer :edn, send-buf-ms-ajax 100, handshake-data-fn (fn [ring-req] nil), user-id-fn (fn [ring-req] (get-in ring-req [:session :uid])), recv-buf-or-n (async/sliding-buffer 1000)}}]])), :doc "Takes a web server adapter[1] and returns a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req]) for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req]) for Ring GET + chsk URL.\n    :connected-uids ; Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Common options:\n    :user-id-fn        ; (fn [ring-req]) -> unique user-id for server>user push.\n    :csrf-token-fn     ; (fn [ring-req]) -> CSRF token for Ajax POSTs.\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows).", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(web-server-ch-adapter [{:keys [recv-buf-or-n ws-kalive-ms lp-timeout-ms send-buf-ms-ajax send-buf-ms-ws user-id-fn csrf-token-fn handshake-data-fn packer], :or {ws-kalive-ms (enc/ms :secs 25), send-buf-ms-ws 30, lp-timeout-ms (enc/ms :secs 20), csrf-token-fn (fn [ring-req] (or (get-in ring-req [:session :csrf-token]) (get-in ring-req [:session :ring.middleware.anti-forgery/anti-forgery-token]) (get-in ring-req [:session "__anti-forgery-token"]))), packer :edn, send-buf-ms-ajax 100, handshake-data-fn (fn [ring-req] nil), user-id-fn (fn [ring-req] (get-in ring-req [:session :uid])), recv-buf-or-n (async/sliding-buffer 1000)}}])], :arglists ([web-server-ch-adapter & [{:keys [recv-buf-or-n ws-kalive-ms lp-timeout-ms send-buf-ms-ajax send-buf-ms-ws user-id-fn csrf-token-fn handshake-data-fn packer], :or {ws-kalive-ms (enc/ms :secs 25), send-buf-ms-ws 30, lp-timeout-ms (enc/ms :secs 20), csrf-token-fn (fn [ring-req] (or (get-in ring-req [:session :csrf-token]) (get-in ring-req [:session :ring.middleware.anti-forgery/anti-forgery-token]) (get-in ring-req [:session "__anti-forgery-token"]))), packer :edn, send-buf-ms-ajax 100, handshake-data-fn (fn [ring-req] nil), user-id-fn (fn [ring-req] (get-in ring-req [:session :uid])), recv-buf-or-n (async/sliding-buffer 1000)}}]]), :arglists-meta (nil)}}, :name taoensso.sente/make-channel-socket-server!, :variadic true, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 34, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(web-server-ch-adapter [{:keys [recv-buf-or-n ws-kalive-ms lp-timeout-ms send-buf-ms-ajax send-buf-ms-ws user-id-fn csrf-token-fn handshake-data-fn packer], :or {ws-kalive-ms (enc/ms :secs 25), send-buf-ms-ws 30, lp-timeout-ms (enc/ms :secs 20), csrf-token-fn (fn [ring-req] (or (get-in ring-req [:session :csrf-token]) (get-in ring-req [:session :ring.middleware.anti-forgery/anti-forgery-token]) (get-in ring-req [:session "__anti-forgery-token"]))), packer :edn, send-buf-ms-ajax 100, handshake-data-fn (fn [ring-req] nil), user-id-fn (fn [ring-req] (get-in ring-req [:session :uid])), recv-buf-or-n (async/sliding-buffer 1000)}}])], :arglists ([web-server-ch-adapter & [{:keys [recv-buf-or-n ws-kalive-ms lp-timeout-ms send-buf-ms-ajax send-buf-ms-ws user-id-fn csrf-token-fn handshake-data-fn packer], :or {ws-kalive-ms (enc/ms :secs 25), send-buf-ms-ws 30, lp-timeout-ms (enc/ms :secs 20), csrf-token-fn (fn [ring-req] (or (get-in ring-req [:session :csrf-token]) (get-in ring-req [:session :ring.middleware.anti-forgery/anti-forgery-token]) (get-in ring-req [:session "__anti-forgery-token"]))), packer :edn, send-buf-ms-ajax 100, handshake-data-fn (fn [ring-req] nil), user-id-fn (fn [ring-req] (get-in ring-req [:session :uid])), recv-buf-or-n (async/sliding-buffer 1000)}}]]), :arglists-meta (nil)}, :method-params [(web-server-ch-adapter [{:keys [recv-buf-or-n ws-kalive-ms lp-timeout-ms send-buf-ms-ajax send-buf-ms-ws user-id-fn csrf-token-fn handshake-data-fn packer], :or {ws-kalive-ms (enc/ms :secs 25), send-buf-ms-ws 30, lp-timeout-ms (enc/ms :secs 20), csrf-token-fn (fn [ring-req] (or (get-in ring-req [:session :csrf-token]) (get-in ring-req [:session :ring.middleware.anti-forgery/anti-forgery-token]) (get-in ring-req [:session "__anti-forgery-token"]))), packer :edn, send-buf-ms-ajax 100, handshake-data-fn (fn [ring-req] nil), user-id-fn (fn [ring-req] (get-in ring-req [:session :uid])), recv-buf-or-n (async/sliding-buffer 1000)}}])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 242, :end-line 242, :max-fixed-arity 1, :fn-var true, :arglists ([web-server-ch-adapter & [{:keys [recv-buf-or-n ws-kalive-ms lp-timeout-ms send-buf-ms-ajax send-buf-ms-ws user-id-fn csrf-token-fn handshake-data-fn packer], :or {ws-kalive-ms (enc/ms :secs 25), send-buf-ms-ws 30, lp-timeout-ms (enc/ms :secs 20), csrf-token-fn (fn [ring-req] (or (get-in ring-req [:session :csrf-token]) (get-in ring-req [:session :ring.middleware.anti-forgery/anti-forgery-token]) (get-in ring-req [:session "__anti-forgery-token"]))), packer :edn, send-buf-ms-ajax 100, handshake-data-fn (fn [ring-req] nil), user-id-fn (fn [ring-req] (get-in ring-req [:session :uid])), recv-buf-or-n (async/sliding-buffer 1000)}}]]), :doc "Takes a web server adapter[1] and returns a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req]) for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req]) for Ring GET + chsk URL.\n    :connected-uids ; Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Common options:\n    :user-id-fn        ; (fn [ring-req]) -> unique user-id for server>user push.\n    :csrf-token-fn     ; (fn [ring-req]) -> CSRF token for Ajax POSTs.\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows)."}, ajax-lite {:name taoensso.sente/ajax-lite, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 733, :column 8, :end-line 733, :end-column 22, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 733, :column 13, :end-line 733, :end-column 22}, :doc "Alias of `taoensso.encore/ajax-lite`"}, get-chsk-url {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1278, :column 8, :end-line 1278, :end-column 20, :private true, :arglists (quote ([protocol host path type]))}, :private true, :name taoensso.sente/get-chsk-url, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 20, :method-params ([protocol host path type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1278, :end-line 1278, :max-fixed-arity 4, :fn-var true, :arglists (quote ([protocol host path type]))}, -chsk-send! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 739, :column 4, :end-line 739, :end-column 15, :protocol taoensso.sente/IChSocket, :doc nil, :arglists (quote ([chsk ev opts]))}, :protocol taoensso.sente/IChSocket, :name taoensso.sente/-chsk-send!, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 15, :method-params ([chsk ev opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 735, :end-line 739, :max-fixed-arity 3, :fn-var true, :arglists (quote ([chsk ev opts])), :doc nil}, -chsk-reconnect! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 738, :column 4, :end-line 738, :end-column 20, :protocol taoensso.sente/IChSocket, :doc nil, :arglists (quote ([chsk]))}, :protocol taoensso.sente/IChSocket, :name taoensso.sente/-chsk-reconnect!, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 20, :method-params ([chsk]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 735, :end-line 738, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chsk])), :doc nil}, receive-handshake! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 848, :column 8, :end-line 848, :end-column 26, :private true, :arglists (quote ([chsk-type chsk clj]))}, :private true, :name taoensso.sente/receive-handshake!, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 26, :method-params ([chsk-type chsk clj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 848, :end-line 848, :max-fixed-arity 3, :fn-var true, :arglists (quote ([chsk-type chsk clj]))}, start-client-chsk-router! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1456, :column 7, :end-line 1456, :end-column 32, :arglists (quote ([ch-recv event-msg-handler & [{:as opts, :keys [trace-evs? error-handler]}]])), :doc "Creates a go-loop to call `(event-msg-handler <client-event-msg>)` and\n  log any errors. Returns a `(fn stop! [])`.\n\n  For performance, you'll likely want your `event-msg-handler` fn to be\n  non-blocking (at least for slow handling operations). Clojure offers\n  a rich variety of tools here including futures, agents, core.async,\n  etc.\n\n  Advanced users may also prefer to write their own loop against `ch-recv`.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(ch-recv event-msg-handler [{:as opts, :keys [trace-evs? error-handler]}])], :arglists ([ch-recv event-msg-handler & [{:as opts, :keys [trace-evs? error-handler]}]]), :arglists-meta (nil)}}, :name taoensso.sente/start-client-chsk-router!, :variadic true, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 32, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(ch-recv event-msg-handler [{:as opts, :keys [trace-evs? error-handler]}])], :arglists ([ch-recv event-msg-handler & [{:as opts, :keys [trace-evs? error-handler]}]]), :arglists-meta (nil)}, :method-params [(ch-recv event-msg-handler [{:as opts, :keys [trace-evs? error-handler]}])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1456, :end-line 1456, :max-fixed-arity 2, :fn-var true, :arglists ([ch-recv event-msg-handler & [{:as opts, :keys [trace-evs? error-handler]}]]), :doc "Creates a go-loop to call `(event-msg-handler <client-event-msg>)` and\n  log any errors. Returns a `(fn stop! [])`.\n\n  For performance, you'll likely want your `event-msg-handler` fn to be\n  non-blocking (at least for slow handling operations). Clojure offers\n  a rich variety of tools here including futures, agents, core.async,\n  etc.\n\n  Advanced users may also prefer to write their own loop against `ch-recv`."}, chsk-destroy! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 742, :column 14, :end-line 742, :end-column 27, :arglists (quote ([chsk])), :doc "Deprecated"}, :name taoensso.sente/chsk-destroy!, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 27, :method-params ([chsk]), :protocol-impl nil, :arglists-meta (nil nil), :column 8, :line 742, :end-line 742, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chsk])), :doc "Deprecated"}, ->ChAjaxSocket {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1056, :column 12, :end-line 1056, :end-column 24, :internal-ctor true, :factory :positional, :arglists (quote ([client-id chs params packer url state_ active-retry-id_ ever-opened?_ backoff-ms-fn ajax-opts curr-xhr_]))}, :name taoensso.sente/->ChAjaxSocket, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 24, :method-params ([client-id chs params packer url state_ active-retry-id_ ever-opened?_ backoff-ms-fn ajax-opts curr-xhr_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 1056, :end-line 1056, :max-fixed-arity 11, :fn-var true, :arglists (quote ([client-id chs params packer url state_ active-retry-id_ ever-opened?_ backoff-ms-fn ajax-opts curr-xhr_]))}, send-buffered-server-evs>ajax-clients! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 672, :column 8, :end-line 672, :end-column 46, :private true, :arglists (quote ([conns_ uid buffered-evs-pstr])), :doc "Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects."}, :private true, :name taoensso.sente/send-buffered-server-evs>ajax-clients!, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 46, :method-params ([conns_ uid buffered-evs-pstr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 672, :end-line 672, :max-fixed-arity 3, :fn-var true, :arglists (quote ([conns_ uid buffered-evs-pstr])), :doc "Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects."}, default-client-side-ajax-timeout-ms {:name taoensso.sente/default-client-side-ajax-timeout-ms, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1049, :column 1, :end-line 1049, :end-column 51, :private true, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1049, :column 16, :end-line 1049, :end-column 51, :private true}, :doc "We must set *some* client-side timeout otherwise an unpredictable (and\n  probably too short) browser default will be used. Must be > server's\n  :lp-timeout-ms."}, ChAjaxSocket {:num-fields 11, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative taoensso.sente/IChSocket cljs.core/IMap cljs.core/ILookup}, :name taoensso.sente/ChAjaxSocket, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 24, :type true, :column 12, :internal-ctor true, :line 1056, :record true, :end-line 1056, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, set-logging-level! {:name taoensso.sente/set-logging-level!, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1499, :column 1, :end-line 1499, :end-column 24, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1499, :column 6, :end-line 1499, :end-column 24}, :doc "DEPRECATED. Please use `timbre/set-level!` instead"}, ->ChAutoSocket {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1211, :column 12, :end-line 1211, :end-column 24, :internal-ctor true, :factory :positional, :arglists (quote ([ws-chsk-opts ajax-chsk-opts state_ impl_]))}, :name taoensso.sente/->ChAutoSocket, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 24, :method-params ([ws-chsk-opts ajax-chsk-opts state_ impl_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 1211, :end-line 1211, :max-fixed-arity 4, :fn-var true, :arglists (quote ([ws-chsk-opts ajax-chsk-opts state_ impl_]))}, -chsk-disconnect! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 737, :column 4, :end-line 737, :end-column 21, :protocol taoensso.sente/IChSocket, :doc nil, :arglists (quote ([chsk reconn?]))}, :protocol taoensso.sente/IChSocket, :name taoensso.sente/-chsk-disconnect!, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 21, :method-params ([chsk reconn?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 735, :end-line 737, :max-fixed-arity 2, :fn-var true, :arglists (quote ([chsk reconn?])), :doc nil}, start-chsk-router! {:name taoensso.sente/start-chsk-router!, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1477, :column 1, :end-line 1477, :end-column 24, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1477, :column 6, :end-line 1477, :end-column 24}}, put-server-event-msg>ch-recv! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 151, :column 8, :end-line 151, :end-column 37, :private true, :arglists (quote ([ch-recv {:as ev-msg, :keys [event ?reply-fn]}])), :doc "All server `event-msg`s go through this"}, :private true, :name taoensso.sente/put-server-event-msg>ch-recv!, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 37, :method-params ([ch-recv p__22223]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 151, :end-line 151, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ch-recv {:as ev-msg, :keys [event ?reply-fn]}])), :doc "All server `event-msg`s go through this"}, coerce-packer {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 217, :column 8, :end-line 217, :end-column 21, :private true, :arglists (quote ([x]))}, :private true, :name taoensso.sente/coerce-packer, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 21, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 217, :end-line 217, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, -chsk-connect! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 736, :column 4, :end-line 736, :end-column 18, :protocol taoensso.sente/IChSocket, :doc nil, :arglists (quote ([chsk]))}, :protocol taoensso.sente/IChSocket, :name taoensso.sente/-chsk-connect!, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 18, :method-params ([chsk]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 735, :end-line 736, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chsk])), :doc nil}, default-edn-packer {:name taoensso.sente/default-edn-packer, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 215, :column 1, :end-line 215, :end-column 34, :private true, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 215, :column 16, :end-line 215, :end-column 34, :private true}}, new-ChAjaxSocket {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1201, :column 8, :end-line 1201, :end-column 24, :private true, :arglists (quote ([opts]))}, :private true, :name taoensso.sente/new-ChAjaxSocket, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 24, :method-params ([opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1201, :end-line 1201, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opts]))}, receive-buffered-evs! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 833, :column 8, :end-line 833, :end-column 29, :private true, :arglists (quote ([chs clj]))}, :private true, :name taoensso.sente/receive-buffered-evs!, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 29, :method-params ([chs clj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 833, :end-line 833, :max-fixed-arity 2, :fn-var true, :arglists (quote ([chs clj]))}, chsk-connect! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 741, :column 14, :end-line 741, :end-column 27, :arglists (quote ([chsk]))}, :name taoensso.sente/chsk-connect!, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 27, :method-params ([chsk]), :protocol-impl nil, :arglists-meta (nil nil), :column 8, :line 741, :end-line 741, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chsk]))}, -start-chsk-router! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1411, :column 8, :end-line 1411, :end-column 27, :private true, :arglists (quote ([server? ch-recv event-msg-handler opts]))}, :private true, :name taoensso.sente/-start-chsk-router!, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 27, :method-params ([server? ch-recv event-msg-handler opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1411, :end-line 1411, :max-fixed-arity 4, :fn-var true, :arglists (quote ([server? ch-recv event-msg-handler opts]))}, EdnPacker {:num-fields 0, :protocols #{taoensso.sente.interfaces/IPacker}, :name taoensso.sente/EdnPacker, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 19, :type true, :column 10, :line 210, :record false, :end-line 210, :skip-protocol-flag nil}, ChAutoSocket {:num-fields 4, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative taoensso.sente/IChSocket cljs.core/IMap cljs.core/ILookup}, :name taoensso.sente/ChAutoSocket, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 24, :type true, :column 12, :internal-ctor true, :line 1211, :record true, :end-line 1211, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, cb-error? {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 164, :column 14, :end-line 164, :end-column 23, :arglists (quote ([cb-reply-clj]))}, :name taoensso.sente/cb-error?, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 23, :method-params ([cb-reply-clj]), :protocol-impl nil, :arglists-meta (nil nil), :column 8, :line 164, :end-line 164, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cb-reply-clj]))}, unpack {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 172, :column 8, :end-line 172, :end-column 14, :private true, :arglists (quote ([packer prefixed-pstr])), :doc "prefixed-pstr->[clj ?cb-uuid]"}, :private true, :name taoensso.sente/unpack, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 14, :method-params ([packer prefixed-pstr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 2, :fn-var true, :arglists (quote ([packer prefixed-pstr])), :doc "prefixed-pstr->[clj ?cb-uuid]"}, chsk-disconnect! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 743, :column 14, :end-line 743, :end-column 30, :arglists (quote ([chsk]))}, :name taoensso.sente/chsk-disconnect!, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 30, :method-params ([chsk]), :protocol-impl nil, :arglists-meta (nil nil), :column 8, :line 743, :end-line 743, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chsk]))}, default-chsk-url-fn {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1503, :column 6, :end-line 1503, :end-column 25}, :name taoensso.sente/default-chsk-url-fn, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 25, :method-params ([path p__23431 websocket?]), :protocol-impl nil, :arglists-meta (), :column 1, :line 1503, :end-line 1503, :max-fixed-arity 3, :fn-var true, :arglists nil, :doc "DEPRECATED"}, start-chsk-router-loop! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1492, :column 7, :end-line 1492, :end-column 30, :arglists (quote ([event-handler ch-recv])), :doc "DEPRECATED: Please use `start-chsk-router!` instead"}, :name taoensso.sente/start-chsk-router-loop!, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 30, :method-params ([event-handler ch-recv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1492, :end-line 1492, :max-fixed-arity 2, :fn-var true, :arglists (quote ([event-handler ch-recv])), :doc "DEPRECATED: Please use `start-chsk-router!` instead"}, chsk-send->closed! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 759, :column 8, :end-line 759, :end-column 26, :private true, :arglists (quote ([?cb-fn]))}, :private true, :name taoensso.sente/chsk-send->closed!, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 26, :method-params ([?cb-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 759, :end-line 759, :max-fixed-arity 1, :fn-var true, :arglists (quote ([?cb-fn]))}, new-ChAutoSocket {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1270, :column 8, :end-line 1270, :end-column 24, :private true, :arglists (quote ([opts]))}, :private true, :name taoensso.sente/new-ChAutoSocket, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 24, :method-params ([opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1270, :end-line 1270, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opts]))}, handshake? {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 843, :column 8, :end-line 843, :end-column 18, :private true, :arglists (quote ([x]))}, :private true, :name taoensso.sente/handshake?, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 843, :end-line 843, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ajax-call {:name taoensso.sente/ajax-call, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1501, :column 8, :end-line 1501, :end-column 22, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1501, :column 13, :end-line 1501, :end-column 22}, :doc "DEPRECATED: Please use `ajax-lite` instead"}, new-ChWebSocket {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1038, :column 8, :end-line 1038, :end-column 23, :private true, :arglists (quote ([opts]))}, :private true, :name taoensso.sente/new-ChWebSocket, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 23, :method-params ([opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1038, :end-line 1038, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opts]))}, ChWebSocket {:num-fields 12, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative taoensso.sente/IChSocket cljs.core/IMap cljs.core/ILookup}, :name taoensso.sente/ChWebSocket, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 23, :type true, :column 12, :internal-ctor true, :line 878, :record true, :end-line 878, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, pull-unused-cb-fn! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 774, :column 8, :end-line 774, :end-column 26, :private true, :arglists (quote ([cbs-waiting_ ?cb-uuid]))}, :private true, :name taoensso.sente/pull-unused-cb-fn!, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 26, :method-params ([cbs-waiting_ ?cb-uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 774, :end-line 774, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cbs-waiting_ ?cb-uuid]))}, assert-event {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 109, :column 7, :end-line 109, :end-column 19, :arglists (quote ([x]))}, :name taoensso.sente/assert-event, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, chsk-reconnect! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 745, :column 7, :end-line 745, :end-column 22, :arglists (quote ([chsk])), :doc "Useful for reauthenticating after login/logout, etc."}, :name taoensso.sente/chsk-reconnect!, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 22, :method-params ([chsk]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 745, :end-line 745, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chsk])), :doc "Useful for reauthenticating after login/logout, etc."}, make-channel-socket-client! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1285, :column 7, :end-line 1285, :end-column 34, :arglists (quote ([path & [{:keys [type host params recv-buf-or-n packer client-id ajax-opts wrap-recv-evs? backoff-ms-fn], :as opts, :or {type :auto, recv-buf-or-n (async/sliding-buffer 2048), packer :edn, client-id (or (:client-uuid opts) (enc/uuid-str)), wrap-recv-evs? true, backoff-ms-fn enc/exp-backoff}} _deprecated-more-opts]])), :doc "Returns nil on failure, or a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n             ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n    :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n    :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n    :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n  Common options:\n    :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n    :host           ; Server host (defaults to current page's host).\n    :params         ; Map of any params to incl. in chsk Ring requests (handy\n                    ; for application-level auth, etc.).\n    :packer         ; :edn (default), or an IPacker implementation.\n    :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n    :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(path [{:keys [type host params recv-buf-or-n packer client-id ajax-opts wrap-recv-evs? backoff-ms-fn], :as opts, :or {type :auto, recv-buf-or-n (async/sliding-buffer 2048), packer :edn, client-id (or (:client-uuid opts) (enc/uuid-str)), wrap-recv-evs? true, backoff-ms-fn enc/exp-backoff}} _deprecated-more-opts])], :arglists ([path & [{:keys [type host params recv-buf-or-n packer client-id ajax-opts wrap-recv-evs? backoff-ms-fn], :as opts, :or {type :auto, recv-buf-or-n (async/sliding-buffer 2048), packer :edn, client-id (or (:client-uuid opts) (enc/uuid-str)), wrap-recv-evs? true, backoff-ms-fn enc/exp-backoff}} _deprecated-more-opts]]), :arglists-meta (nil)}}, :name taoensso.sente/make-channel-socket-client!, :variadic true, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 34, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(path [{:keys [type host params recv-buf-or-n packer client-id ajax-opts wrap-recv-evs? backoff-ms-fn], :as opts, :or {type :auto, recv-buf-or-n (async/sliding-buffer 2048), packer :edn, client-id (or (:client-uuid opts) (enc/uuid-str)), wrap-recv-evs? true, backoff-ms-fn enc/exp-backoff}} _deprecated-more-opts])], :arglists ([path & [{:keys [type host params recv-buf-or-n packer client-id ajax-opts wrap-recv-evs? backoff-ms-fn], :as opts, :or {type :auto, recv-buf-or-n (async/sliding-buffer 2048), packer :edn, client-id (or (:client-uuid opts) (enc/uuid-str)), wrap-recv-evs? true, backoff-ms-fn enc/exp-backoff}} _deprecated-more-opts]]), :arglists-meta (nil)}, :method-params [(path [{:keys [type host params recv-buf-or-n packer client-id ajax-opts wrap-recv-evs? backoff-ms-fn], :as opts, :or {type :auto, recv-buf-or-n (async/sliding-buffer 2048), packer :edn, client-id (or (:client-uuid opts) (enc/uuid-str)), wrap-recv-evs? true, backoff-ms-fn enc/exp-backoff}} _deprecated-more-opts])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1285, :end-line 1285, :max-fixed-arity 1, :fn-var true, :arglists ([path & [{:keys [type host params recv-buf-or-n packer client-id ajax-opts wrap-recv-evs? backoff-ms-fn], :as opts, :or {type :auto, recv-buf-or-n (async/sliding-buffer 2048), packer :edn, client-id (or (:client-uuid opts) (enc/uuid-str)), wrap-recv-evs? true, backoff-ms-fn enc/exp-backoff}} _deprecated-more-opts]]), :doc "Returns nil on failure, or a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n             ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n    :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n    :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n    :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n  Common options:\n    :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n    :host           ; Server host (defaults to current page's host).\n    :params         ; Map of any params to incl. in chsk Ring requests (handy\n                    ; for application-level auth, etc.).\n    :packer         ; :edn (default), or an IPacker implementation.\n    :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n    :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?"}, with-?meta {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 190, :column 8, :end-line 190, :end-column 18, :private true, :arglists (quote ([x ?m]))}, :private true, :name taoensso.sente/with-?meta, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 18, :method-params ([x ?m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x ?m]))}, cb-chan-as-fn {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 815, :column 8, :end-line 815, :end-column 21, :private true, :arglists (quote ([?cb ev])), :doc "Experimental, undocumented. Allows a core.async channel to be provided\n  instead of a cb-fn. The channel will receive values of form\n  [<event-id>.cb <reply>]."}, :private true, :name taoensso.sente/cb-chan-as-fn, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 21, :method-params ([?cb ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 815, :end-line 815, :max-fixed-arity 2, :fn-var true, :arglists (quote ([?cb ev])), :doc "Experimental, undocumented. Allows a core.async channel to be provided\n  instead of a cb-fn. The channel will receive values of form\n  [<event-id>.cb <reply>]."}, map->ChAutoSocket {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1211, :column 12, :end-line 1211, :end-column 24, :internal-ctor true, :factory :map, :arglists (quote ([G__22928]))}, :name taoensso.sente/map->ChAutoSocket, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 24, :method-params ([G__22928]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 1211, :end-line 1211, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__22928]))}, IChSocket {:meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 735, :column 14, :end-line 735, :end-column 23, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-chsk-connect! [[chsk]], -chsk-disconnect! [[chsk reconn?]], -chsk-reconnect! [[chsk]], -chsk-send! [[chsk ev opts]]}}}, :protocol-symbol true, :name taoensso.sente/IChSocket, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 23, :column 1, :line 735, :protocol-info {:methods {-chsk-connect! [[chsk]], -chsk-disconnect! [[chsk reconn?]], -chsk-reconnect! [[chsk]], -chsk-send! [[chsk ev opts]]}}, :info nil, :end-line 735, :impls #{taoensso.sente/ChWebSocket taoensso.sente/ChAjaxSocket taoensso.sente/ChAutoSocket}, :doc nil, :jsdoc ("@interface")}, debug-mode?_ {:name taoensso.sente/debug-mode?_, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 89, :column 1, :end-line 89, :end-column 22, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 89, :column 10, :end-line 89, :end-column 22}}, cb-success? {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 165, :column 14, :end-line 165, :end-column 25, :arglists (quote ([cb-reply-clj]))}, :name taoensso.sente/cb-success?, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 25, :method-params ([cb-reply-clj]), :protocol-impl nil, :arglists-meta (nil nil), :column 8, :line 165, :end-line 165, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cb-reply-clj]))}, ->ChWebSocket {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 878, :column 12, :end-line 878, :end-column 23, :internal-ctor true, :factory :positional, :arglists (quote ([client-id chs params packer url state_ active-retry-id_ retry-count_ ever-opened?_ backoff-ms-fn cbs-waiting_ socket_]))}, :name taoensso.sente/->ChWebSocket, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 23, :method-params ([client-id chs params packer url state_ active-retry-id_ retry-count_ ever-opened?_ backoff-ms-fn cbs-waiting_ socket_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 878, :end-line 878, :max-fixed-arity 12, :fn-var true, :arglists (quote ([client-id chs params packer url state_ active-retry-id_ retry-count_ ever-opened?_ backoff-ms-fn cbs-waiting_ socket_]))}, start-server-chsk-router! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 1443, :column 7, :end-line 1443, :end-column 32, :arglists (quote ([ch-recv event-msg-handler & [{:as opts, :keys [trace-evs? error-handler]}]])), :doc "Creates a go-loop to call `(event-msg-handler <server-event-msg>)` and\n  log any errors. Returns a `(fn stop! [])`.\n\n  For performance, you'll likely want your `event-msg-handler` fn to be\n  non-blocking (at least for slow handling operations). Clojure offers\n  a rich variety of tools here including futures, agents, core.async,\n  etc.\n\n  Advanced users may also prefer to write their own loop against `ch-recv`.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(ch-recv event-msg-handler [{:as opts, :keys [trace-evs? error-handler]}])], :arglists ([ch-recv event-msg-handler & [{:as opts, :keys [trace-evs? error-handler]}]]), :arglists-meta (nil)}}, :name taoensso.sente/start-server-chsk-router!, :variadic true, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 32, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(ch-recv event-msg-handler [{:as opts, :keys [trace-evs? error-handler]}])], :arglists ([ch-recv event-msg-handler & [{:as opts, :keys [trace-evs? error-handler]}]]), :arglists-meta (nil)}, :method-params [(ch-recv event-msg-handler [{:as opts, :keys [trace-evs? error-handler]}])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1443, :end-line 1443, :max-fixed-arity 2, :fn-var true, :arglists ([ch-recv event-msg-handler & [{:as opts, :keys [trace-evs? error-handler]}]]), :doc "Creates a go-loop to call `(event-msg-handler <server-event-msg>)` and\n  log any errors. Returns a `(fn stop! [])`.\n\n  For performance, you'll likely want your `event-msg-handler` fn to be\n  non-blocking (at least for slow handling operations). Clojure offers\n  a rich variety of tools here including futures, agents, core.async,\n  etc.\n\n  Advanced users may also prefer to write their own loop against `ch-recv`."}, client-event-msg? {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 122, :column 7, :end-line 122, :end-column 24, :arglists (quote ([x]))}, :name taoensso.sente/client-event-msg?, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 24, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, map->ChWebSocket {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 878, :column 12, :end-line 878, :end-column 23, :internal-ctor true, :factory :map, :arglists (quote ([G__22838]))}, :name taoensso.sente/map->ChWebSocket, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 23, :method-params ([G__22838]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 878, :end-line 878, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__22838]))}, merge>chsk-state! {:protocol-inline nil, :meta {:file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :line 780, :column 8, :end-line 780, :end-column 25, :private true, :arglists (quote ([{:keys [chs state_], :as chsk} merge-state]))}, :private true, :name taoensso.sente/merge>chsk-state!, :variadic false, :file "file:/home/alyssa/.m2/repository/com/taoensso/sente/1.9.0/sente-1.9.0.jar!/taoensso/sente.cljs", :end-column 25, :method-params ([p__22763 merge-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 780, :end-line 780, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [chs state_], :as chsk} merge-state]))}}, :require-macros {asyncm cljs.core.async.macros, cljs.core.async.macros cljs.core.async.macros, enc taoensso.encore, taoensso.encore taoensso.encore, timbre taoensso.timbre, taoensso.timbre taoensso.timbre}, :cljs.analyzer/constants {:seen #{:curr-xhr_ :chsk/closed :?reply-fn :ws-kalive-ms :ajax-post-fn :ever-opened?_ :on-msg :flush? :cb :send-buf-ms-ws :first-open? :taoensso.sente/nil-uid :default-client-side-ajax-timeout-ms ajax-opts cbs-waiting_ :ws :impl_ :get :lp-timeout-ms :websocket :chsk/recv :client-uuid :ch-recv :malformed-event :requested-reconnect-pending? :client-id :ev :last-error state_ :X-CSRF-Token ajax-chsk-opts :csrf-token-fn :?content :noop :else :on-close :sente/all-users-without-uid :protocol :wrong-id-type :newly-connected :connected-uids curr-xhr_ :method :pathname :ws-chsk-opts ever-opened?_ :uid :trace-evs? :packer :chs :warn :server :chsk/ws-ping :trace :last-ws-error :chsk/uidport-open :?sch :swap/dissoc impl_ client-id :secs :handshake? :params :chsk/close :recur :type :chsk/state :unnamespaced-id :debug :debug/timeout :state :ajax :send-buf-ms-ajax :retry-count_ :chsk/bad-event :requested-reconnect? ws-chsk-opts :udt packer chs :chsk/bad-package :reconn :ajax-get-or-ws-handshake-fn :headers :internal :error-handler :handshake-data :chsk/auto-ajax-downgrade :chsk/error :handshake-data-fn :reason :host params :debug/ws-ping :event :backoff-ms-fn :wrong-type :user-id-fn :recv-buf-or-n :socket_ retry-count_ :ever-opened? :ppstr :id :open? :edn :chsk/uidport-close :chsk-url-fn :url :code :active-retry-id_ :lp-timeout :ring-req :chsk/timeout :handled :wrap-recv-evs? :?data :post :chsk :csrf-token :f :error :send-fn :wrong-length :uuid :on-error :timeout :resp-type backoff-ms-fn :ajax-opts :cbs-waiting_ :init? socket_ :ring.middleware.anti-forgery/anti-forgery-token :last-ws-close :auto active-retry-id_ :on-open url :timeout-ms :chsk/handshake :apparent-success :?error :newly-disconnected :state_ :ajax-cb :any :chsk/dummy-cb-200 :<server :session :ajax-chsk-opts :text :clean?}, :order [:wrong-type :wrong-length :else :wrong-id-type :unnamespaced-id :chsk/bad-event :malformed-event :ch-recv :state :event :id :?data :send-fn :?reply-fn :client-id :connected-uids :uid :ring-req :warn :f :auto :chsk/closed :chsk/error :chsk/timeout :debug :chsk/bad-package :ajax-cb :trace :edn :recv-buf-or-n :ws-kalive-ms :secs :lp-timeout-ms :send-buf-ms-ajax :send-buf-ms-ws :user-id-fn :session :csrf-token-fn :csrf-token :ring.middleware.anti-forgery/anti-forgery-token :handshake-data-fn :packer :default-client-side-ajax-timeout-ms :taoensso.sente/nil-uid :ws :ajax :any :init? :udt :?sch :newly-connected :newly-disconnected :flush? :sente/all-users-without-uid :chsk/close :recur :ajax-post-fn :ajax-get-or-ws-handshake-fn :on-open :params :ppstr :chsk/dummy-cb-200 :chsk/handshake :error :on-msg :on-close :on-error :chsk/uidport-open :chsk/ws-ping :handshake? :swap/dissoc :chsk/uidport-close :websocket :timeout-ms :cb :chs :state_ :requested-reconnect-pending? :open? :first-open? :requested-reconnect? :chsk/state :<server :ever-opened?_ :type :ever-opened? :handshake-data :internal :handled :url :active-retry-id_ :retry-count_ :backoff-ms-fn :cbs-waiting_ :socket_ :reconn :apparent-success :uuid :ev :last-ws-error :debug/ws-ping :noop :clean? :code :reason :last-ws-close client-id chs params packer url state_ active-retry-id_ retry-count_ ever-opened?_ backoff-ms-fn cbs-waiting_ socket_ :ajax-opts :curr-xhr_ :method :resp-type :headers :post :text :X-CSRF-Token :?error :?content :timeout :get :debug/timeout ajax-opts curr-xhr_ :ws-chsk-opts :ajax-chsk-opts :impl_ :chsk/auto-ajax-downgrade :last-error ws-chsk-opts ajax-chsk-opts impl_ :host :client-uuid :wrap-recv-evs? :lp-timeout :protocol :pathname :chsk-url-fn :chsk/recv :chsk :trace-evs? :error-handler :server]}, :doc "Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> <?csrf-token> <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability)."}