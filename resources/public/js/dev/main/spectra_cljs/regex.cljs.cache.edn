{:use-macros nil, :excludes #{}, :name spectra_cljs.regex, :imports nil, :requires {str clojure.string, clojure.string clojure.string, s spectra_cljc.schema, spectra_cljc.schema spectra_cljc.schema}, :uses nil, :defs {url-truncate {:protocol-inline nil, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/regex.cljs", :line 19, :column 7, :end-line 19, :end-column 19, :arglists (quote ([url]))}, :name spectra_cljs.regex/url-truncate, :variadic false, :file "src/spectra_cljs/regex.cljs", :end-column 19, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url]))}, regex-escape {:protocol-inline nil, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/regex.cljs", :line 42, :column 7, :end-line 42, :end-column 19, :arglists (quote ([text]))}, :name spectra_cljs.regex/regex-escape, :variadic false, :file "src/spectra_cljs/regex.cljs", :end-column 19, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, url-regex {:name spectra_cljs.regex/url-regex, :file "src/spectra_cljs/regex.cljs", :line 8, :column 1, :end-line 8, :end-column 15, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/regex.cljs", :line 8, :column 6, :end-line 8, :end-column 15}}, bracket-regex {:name spectra_cljs.regex/bracket-regex, :file "src/spectra_cljs/regex.cljs", :line 9, :column 1, :end-line 9, :end-column 19, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/regex.cljs", :line 9, :column 6, :end-line 9, :end-column 19}}, node-parse {:protocol-inline nil, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/regex.cljs", :line 30, :column 7, :end-line 30, :end-column 17, :arglists (quote ([text]))}, :name spectra_cljs.regex/node-parse, :variadic false, :file "src/spectra_cljs/regex.cljs", :end-column 17, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, links-parse {:protocol-inline nil, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/regex.cljs", :line 38, :column 7, :end-line 38, :end-column 18, :arglists (quote ([text]))}, :name spectra_cljs.regex/links-parse, :variadic false, :file "src/spectra_cljs/regex.cljs", :end-column 18, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, node-map {:protocol-inline nil, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/regex.cljs", :line 12, :column 7, :end-line 12, :end-column 15, :arglists (quote ([hypertext]))}, :name spectra_cljs.regex/node-map, :variadic false, :file "src/spectra_cljs/regex.cljs", :end-column 15, :method-params ([hypertext]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hypertext]))}, node-param-regex {:name spectra_cljs.regex/node-param-regex, :file "src/spectra_cljs/regex.cljs", :line 6, :column 1, :end-line 6, :end-column 22, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/regex.cljs", :line 6, :column 6, :end-line 6, :end-column 22}}, node-regex {:name spectra_cljs.regex/node-regex, :file "src/spectra_cljs/regex.cljs", :line 7, :column 1, :end-line 7, :end-column 16, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/regex.cljs", :line 7, :column 6, :end-line 7, :end-column 16}}, esc-char-regex {:name spectra_cljs.regex/esc-char-regex, :file "src/spectra_cljs/regex.cljs", :line 10, :column 1, :end-line 10, :end-column 20, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/regex.cljs", :line 10, :column 6, :end-line 10, :end-column 20}}, url-map {:protocol-inline nil, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/regex.cljs", :line 24, :column 7, :end-line 24, :end-column 14, :arglists (quote ([hypertext]))}, :name spectra_cljs.regex/url-map, :variadic false, :file "src/spectra_cljs/regex.cljs", :end-column 14, :method-params ([hypertext]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hypertext]))}, url-parse {:protocol-inline nil, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/regex.cljs", :line 34, :column 7, :end-line 34, :end-column 16, :arglists (quote ([text]))}, :name spectra_cljs.regex/url-parse, :variadic false, :file "src/spectra_cljs/regex.cljs", :end-column 16, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:original :type :node :link :url :text}, :order [:text :link :original :type :node :url]}, :doc nil}