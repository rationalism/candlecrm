{:use-macros nil, :excludes #{}, :name spectra_cljs.edit, :imports nil, :requires {u spectra_cljs.update, spectra_cljs.state spectra_cljs.state, table spectra_cljs.table, spectra_cljs.update spectra_cljs.update, spectra_cljc.schema spectra_cljc.schema, state spectra_cljs.state, s spectra_cljc.schema, spectra_cljs.util spectra_cljs.util, str clojure.string, clojure.string clojure.string, spectra_cljs.table spectra_cljs.table}, :uses {node-link spectra_cljs.util, add-ids spectra_cljs.util, set-field! spectra_cljs.util}, :defs {submit-new-entity {:protocol-inline nil, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/edit.cljs", :line 9, :column 7, :end-line 9, :end-column 24, :arglists (quote ([type]))}, :name spectra_cljs.edit/submit-new-entity, :variadic false, :file "src/spectra_cljs/edit.cljs", :end-column 24, :method-params ([type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([type]))}, input-cell {:protocol-inline nil, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/edit.cljs", :line 30, :column 7, :end-line 30, :end-column 17, :arglists (quote ([id-attr cache]))}, :name spectra_cljs.edit/input-cell, :variadic false, :file "src/spectra_cljs/edit.cljs", :end-column 17, :method-params ([id-attr cache]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id-attr cache]))}, add-message {:protocol-inline nil, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/edit.cljs", :line 14, :column 7, :end-line 14, :end-column 18, :arglists (quote ([]))}, :name spectra_cljs.edit/add-message, :variadic false, :file "src/spectra_cljs/edit.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, input-block {:protocol-inline nil, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/edit.cljs", :line 52, :column 7, :end-line 52, :end-column 18, :arglists (quote ([attr cache]))}, :name spectra_cljs.edit/input-block, :variadic false, :file "src/spectra_cljs/edit.cljs", :end-column 18, :method-params ([attr cache]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([attr cache]))}, count-cells {:protocol-inline nil, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/edit.cljs", :line 26, :column 7, :end-line 26, :end-column 18, :arglists (quote ([attr cache]))}, :name spectra_cljs.edit/count-cells, :variadic false, :file "src/spectra_cljs/edit.cljs", :end-column 18, :method-params ([attr cache]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([attr cache]))}, edit-message {:protocol-inline nil, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/edit.cljs", :line 20, :column 7, :end-line 20, :end-column 19, :arglists (quote ([]))}, :name spectra_cljs.edit/edit-message, :variadic false, :file "src/spectra_cljs/edit.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-form {:protocol-inline nil, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/edit.cljs", :line 72, :column 7, :end-line 72, :end-column 15, :arglists (quote ([]))}, :name spectra_cljs.edit/add-form, :variadic false, :file "src/spectra_cljs/edit.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, entity-form {:protocol-inline nil, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/edit.cljs", :line 58, :column 7, :end-line 58, :end-column 18, :arglists (quote ([legend attrs cache onclick msg]))}, :name spectra_cljs.edit/entity-form, :variadic false, :file "src/spectra_cljs/edit.cljs", :end-column 18, :method-params ([legend attrs cache onclick msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 5, :fn-var true, :arglists (quote ([legend attrs cache onclick msg]))}, count-attr-cells {:protocol-inline nil, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/edit.cljs", :line 49, :column 7, :end-line 49, :end-column 23, :arglists (quote ([attr cache]))}, :name spectra_cljs.edit/count-attr-cells, :variadic false, :file "src/spectra_cljs/edit.cljs", :end-column 23, :method-params ([attr cache]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([attr cache]))}, edit-form {:protocol-inline nil, :meta {:file "/home/alyssa/clojure/spectra/src/spectra_cljs/edit.cljs", :line 82, :column 7, :end-line 82, :end-column 16, :arglists (quote ([]))}, :name spectra_cljs.edit/edit-form, :variadic false, :file "src/spectra_cljs/edit.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:fieldset :edit-entity-msg :new-entity :key :button :name :value :type :center-node :on-click :div :label :id :class :a.new-link :legend>h3 :current-node :form :input :new-entity-msg :on-change :href :span}, :order [:new-entity :new-entity-msg :span :id :div :class :label :input :type :name :on-change :value :a.new-link :href :on-click :key :form :fieldset :legend>h3 :button :current-node :center-node :edit-entity-msg]}, :doc nil}